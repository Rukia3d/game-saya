import { elementName } from "../engine/types";
import {
  ICell,
  IEnemyCell,
  ILevel,
  IReel,
  IRun,
  ITriggerCell,
} from "../levelgen";
import { elements } from "./testDBData";

import { mapToScreen } from "../../src/utils/helpers";

export const testReelsPanel: IReel[] = [
  {
    imageAddress: "test1",
    text: "test1",
    name: "test1",
    type: "panel",
  },
  {
    imageAddress: "test2",
    text: "test2",
    name: "test2",
    type: "panel",
  },
  {
    imageAddress: "test3",
    text: "test3",
    name: "test3",
    type: "panel",
  },
];
export const testReelsDial: IReel[] = [
  {
    imageAddress: "test1",
    text: "test1",
    name: "test1",
    type: "dialogue",
  },
  {
    imageAddress: "test2",
    text: "test2",
    name: "test2",
    type: "dialogue",
  },
  {
    imageAddress: "test3",
    text: "test3",
    name: "test3",
    type: "dialogue",
  },
];
export const triggersMap: {
  trigger: ITriggerCell;
  y: number;
  triggerId: number;
}[] = [
  { trigger: { type: "trigger" }, y: 0, triggerId: 0 },
  { trigger: { type: "trigger" }, y: 99, triggerId: 1 },
  { trigger: { type: "trigger" }, y: 100, triggerId: 2 },
];

export const testCells: ICell[][] = [
  [
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
  ],
  [
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //11
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
  ],
  //21
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //31
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "space" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //41
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //51
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //61
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //71
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //81
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  //91
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "obstacle" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "obstacle" },
    { type: "space" },
    { type: "space" },
    { type: "obstacle" },
    { type: "obstacle" },
  ],
  [
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
    { type: "space" },
  ],
  [
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
  ],
  [
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
    { type: "trigger" },
  ],
];

export const enemiesMap: { enemy: IEnemyCell; x: number; y: number }[] = [
  { x: 2, y: 2 },
  { x: 3, y: 5 },
  { x: 4, y: 9 },
  { x: 2, y: 12 },
  { x: 1, y: 15 },
  { x: 3, y: 21 },
  { x: 4, y: 23 },
  { x: 3, y: 26 },
  { x: 0, y: 31 },
  { x: 1, y: 34 },
  { x: 2, y: 35 },
  { x: 4, y: 40 },
  { x: 4, y: 42 },
  { x: 1, y: 46 },
  { x: 4, y: 49 },
  { x: 1, y: 52 },
  { x: 0, y: 53 },
  { x: 2, y: 58 },
  { x: 4, y: 61 },
  { x: 3, y: 64 },
  { x: 0, y: 66 },
  { x: 1, y: 70 },
  { x: 0, y: 72 },
  { x: 1, y: 74 },
  { x: 0, y: 77 },
  { x: 2, y: 81 },
  { x: 0, y: 85 },
  { x: 1, y: 89 },
  { x: 2, y: 97 },
].map((enemy, n) => {
  const s = mapToScreen(enemy, testCells);
  return { enemy: { type: "enemy", id: n }, ...s };
});

export const testRun: IRun = {
  settingName: "Wood",
  setting: "forest",
  map: testCells,
  enemies: enemiesMap,
  triggers: [],
  reels: [],
  type: "run",
  musicAddress: "testmusic",
};

export const testLevel: ILevel = {
  levels: [testRun],
  element: [{ id: 0, name: "jade" as elementName }],
};
